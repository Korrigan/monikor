name: Quanta Agent builder

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - '**'
    types:
      - opened
      - edited
      - synchronize
      - labeled

  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  PACKER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  builds:
    if: github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'release')
    environment: build
    name: '[${{ matrix.os }}][${{ matrix.version }}] - Quanta Agent Build'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [debian, centos, ubuntu]
        version: []
        include:
          - os: debian
            version: buster
          - os: debian
            version: bullseye
          - os: debian
            version: bookworm
          - os: centos
            version: 7
          - os: centos
            version: 8
          - os: centos
            version: 9
          - os: ubuntu
            version: 2204_LTS
          - os: ubuntu
            version: 2210
          - os: ubuntu
            version: 2304

    steps:
    - name: Clone Quanta Agent repository
      uses: actions/checkout@v3
      with:
        path: quanta-agent

    - name: Clone Buildozer repository
      uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.BUILDOZER_DEPLOY_KEY }}
        repository: quanta-computing/buildozer
        ref: 'new-packages-worflow'
        persist-credentials: true
        path: tools

    - name: Detect build version
      run: |
        buildver=`grep -F 'AC_INIT([quanta-agent],' ./quanta-agent/configure.ac | cut -d ',' -f 2 | tr -d '[]'`
        echo "Detected quanta-agent version ${buildver}"
        echo "BUILDVERSION=${buildver}" >> "${GITHUB_ENV}"

    - name: Build monikor packages
      run: |
        cd tools
        ./buildozer -t monikor -o ${{ matrix.os }} -v ${{ matrix.version }} -s ../quanta-agent/ -r ${BUILDVERSION}

    - name: Upload packages
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-${{ matrix.version }}-monikor-${BUILDVERSION}.tgz
        path: tools/${{ matrix.os }}/${{ matrix.version }}/pkg/

    - name: Pelletesting
      run: |
        cd tools
        ./pelletesteuse -t monikor -o ${{ matrix.os }} -v ${{ matrix.version }} -r ${BUILDVERSION}

  github-release:
    environment: build
    name: 'Building Quanta Agent for ${{ matrix.os }} ${{ matrix.version }}'
    runs-on: ubuntu-latest
    needs: [builds]
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts

    - name: Update Github release
      uses: ncipollo/release-action@v1
      with:
        name: v${{ env.BUILDVERSION }}
        commit: ${{ env.GITHUB_REF }}
        tag: v${{ env.BUILDVERSION }}
        draft: true
        allowUpdates: true
        artifactErrorsFailBuild: true
        omitNameDuringUpdate: true
        omitPrereleaseDuringUpdate: true
        omitDraftDuringUpdate: true
        replacesArtifacts: true
        updateOnlyUnreleased: true
        generateReleaseNotes: true
        artifacts: ./artifacts/**
